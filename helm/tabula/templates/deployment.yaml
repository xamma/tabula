apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-depl
  labels:
    app: tabula-depl
  {{- include "tabula.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.depl.replicas }}
  selector:
    matchLabels:
      app: tabula-depl
    {{- include "tabula.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: tabula-depl
      {{- include "tabula.selectorLabels" . | nindent 8 }}
    spec:
      # Init container to copy ConfigMap files into a real directory
      initContainers:
        - name: copy-csvs
          image: busybox:latest
          command: ["/bin/sh", "-c"]
          args:
            - cp -L /configmap-csv/* /data/csv/; chmod -R 755 /data/csv
          volumeMounts:
            - name: configmap-csv
              mountPath: /configmap-csv
            - name: csv-files
              mountPath: /data/csv

      containers:
        - name: tabula
          image: {{ .Values.depl.tabula.image.repository }}:{{ .Values.depl.tabula.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.depl.tabula.imagePullPolicy }}
          env:
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ quote .Values.kubernetesClusterDomain }}
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: csv-files
              mountPath: {{ .Values.csv.mountPath }}

      volumes:
        # ConfigMap containing CSVs
        - name: configmap-csv
          configMap:
            name: {{ $.Release.Name }}-csv-defaults

        # Writable scratch space for initContainer
        - name: csv-files
          emptyDir: {}
